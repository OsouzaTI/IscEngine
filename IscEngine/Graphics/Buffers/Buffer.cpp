#include "Buffer.hpp"
using namespace IscEngine;

//////////////////////////////////////////////////////////////////////////////////////////////
// Binds the Buffer
void Buffer::bind(const Buffer* const buffer) {

	glBindBuffer(GL_ARRAY_BUFFER, buffer->id);

}

//////////////////////////////////////////////////////////////////////////////////////////////
// Unbinds the Buffer
void Buffer::unbind() {

	glBindBuffer(GL_ARRAY_BUFFER, 0);

}

//////////////////////////////////////////////////////////////////////////////////////////////
// Constructor
Buffer::Buffer(const vector<float>& data, const unsigned int componentCount) {

	this->size = data.size();
	this->componentCount = componentCount;

	glGenBuffers(1, &this->id);

	Buffer::bind(this);
	glBufferData(GL_ARRAY_BUFFER, this->size * sizeof(float), &data[0], GL_STATIC_DRAW);
	Buffer::unbind();

}

//////////////////////////////////////////////////////////////////////////////////////////////
// Destructor
Buffer::~Buffer() {

	glDeleteBuffers(1, &this->id);

}

//////////////////////////////////////////////////////////////////////////////////////////////
// Returns buffer size
unsigned int Buffer::getSize() const {

	return this->size;

}

//////////////////////////////////////////////////////////////////////////////////////////////
// Returns Buffer component count
unsigned int Buffer::getComponentCount() const {

	return this->componentCount;

}